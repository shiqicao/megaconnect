// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"bytes"
	"compress/gzip"
	"encoding/gob"
)

const numNTSymbols = 33

type (
	gotoTable [numStates]gotoRow
	gotoRow   [numNTSymbols]int
)

var gotoTab = gotoTable{}

func init() {
	tab := [][]int{}
	data := []byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xec, 0xd9, 0x41, 0x48, 0x74, 0x55,
		0x14, 0x07, 0xf0, 0xf9, 0x9f, 0x91, 0x08, 0x99, 0xe4, 0x43, 0x5a, 0xb8, 0x70, 0x91, 0x10, 0x2d,
		0x22, 0x44, 0x44, 0xa4, 0x44, 0x42, 0xc4, 0x45, 0x48, 0x84, 0x84, 0x48, 0x88, 0x88, 0xb4, 0x68,
		0x11, 0x32, 0x0b, 0x89, 0x88, 0x88, 0x08, 0x91, 0xb0, 0xc9, 0x85, 0x98, 0xcb, 0x08, 0x89, 0x88,
		0x10, 0x91, 0x08, 0x11, 0x91, 0x56, 0xad, 0x5a, 0x44, 0x8b, 0x10, 0x11, 0x11, 0x11, 0x11, 0x09,
		0x11, 0x91, 0x68, 0x11, 0x21, 0xff, 0x13, 0x8e, 0x33, 0xe3, 0x98, 0xf3, 0xbc, 0xe7, 0xbe, 0x79,
		0x6f, 0x66, 0xb2, 0xf7, 0x16, 0xdf, 0xfb, 0xc4, 0xdf, 0x3b, 0xf7, 0xf8, 0xe6, 0xbe, 0xf3, 0xce,
		0xbd, 0xf3, 0x8c, 0x7e, 0x2e, 0x10, 0x5d, 0x48, 0x41, 0x73, 0xa9, 0x54, 0x46, 0x3f, 0xbb, 0xfe,
		0x29, 0x97, 0x42, 0x53, 0x2a, 0xc5, 0x57, 0xa6, 0x75, 0x21, 0x45, 0x7c, 0xd1, 0x01, 0xc1, 0xc3,
		0x47, 0x87, 0xe3, 0xf7, 0x91, 0x89, 0xe6, 0x4c, 0x0b, 0x9e, 0x00, 0x68, 0x0d, 0x8e, 0xd1, 0xee,
		0x14, 0x35, 0xc9, 0x34, 0x11, 0x31, 0x89, 0x2e, 0x74, 0x9a, 0x62, 0xf4, 0xf4, 0xc6, 0x9b, 0x87,
		0x41, 0x0c, 0xd4, 0x64, 0x14, 0xa3, 0x18, 0x7e, 0xdd, 0x10, 0x63, 0x2c, 0xff, 0xef, 0xe8, 0xf8,
		0xc4, 0xe4, 0xd4, 0xdb, 0xef, 0x02, 0xd9, 0xe9, 0x7f, 0x8b, 0x99, 0x1a, 0x64, 0x6a, 0x10, 0x1f,
		0x3b, 0x85, 0x7e, 0x52, 0x93, 0x44, 0x9c, 0x42, 0xe7, 0x2d, 0xf7, 0xdd, 0x20, 0x74, 0x09, 0xba,
		0x58, 0xc1, 0xe8, 0xb2, 0x57, 0x18, 0xa7, 0xd0, 0xaf, 0x6f, 0x4e, 0x2b, 0xfa, 0xad, 0x7e, 0xa7,
		0xab, 0xba, 0xa6, 0xeb, 0xba, 0x09, 0x64, 0x75, 0xab, 0xd1, 0x2a, 0xc1, 0x7f, 0x5f, 0xe8, 0x6f,
		0x5e, 0x85, 0x4f, 0x77, 0x62, 0xcb, 0x24, 0x5a, 0xa1, 0xbb, 0xb6, 0x20, 0xba, 0x17, 0x77, 0x26,
		0xc5, 0x81, 0xf6, 0xdd, 0xe4, 0xa0, 0x26, 0x99, 0x00, 0x7a, 0x7a, 0x73, 0x3a, 0xd1, 0x33, 0x3d,
		0xd7, 0x0b, 0xbd, 0xd4, 0x3f, 0xf4, 0x6f, 0x28, 0xb3, 0x7a, 0x55, 0xb7, 0xcf, 0x91, 0x68, 0xaa,
		0xc1, 0x38, 0x63, 0xc5, 0xc1, 0x9a, 0x03, 0xdf, 0x2f, 0xb7, 0x26, 0x13, 0x6c, 0x0c, 0xb9, 0xe8,
		0x12, 0x98, 0xef, 0x03, 0xab, 0x4a, 0xd8, 0x2d, 0x0a, 0xd5, 0x92, 0x68, 0x4b, 0xca, 0x65, 0xec,
		0xa2, 0x52, 0xb9, 0x2c, 0xcc, 0x17, 0x10, 0xdd, 0xae, 0x39, 0x05, 0xa2, 0xc7, 0x60, 0x7a, 0x0d,
		0xe6, 0x65, 0x83, 0xe9, 0x33, 0x98, 0x7e, 0xa7, 0x01, 0xf1, 0xaa, 0xc1, 0x0c, 0x38, 0x0d, 0x88,
		0x41, 0x83, 0x19, 0x0a, 0xff, 0xcc, 0xd5, 0x5f, 0x10, 0x23, 0x0d, 0x92, 0x89, 0x55, 0xe4, 0xeb,
		0xd4, 0xa8, 0x47, 0x18, 0x62, 0xbc, 0xca, 0x4a, 0x35, 0x91, 0x54, 0xaa, 0xd8, 0x85, 0x57, 0x63,
		0x57, 0x3a, 0x58, 0x58, 0xd7, 0x10, 0x1f, 0x11, 0xb3, 0xc4, 0x1c, 0xf1, 0x29, 0x31, 0x4f, 0xe4,
		0x88, 0x25, 0x20, 0x4b, 0x2c, 0xd7, 0xf1, 0xcf, 0x23, 0xbe, 0x22, 0xbe, 0x8c, 0x7b, 0xa4, 0xca,
		0xdd, 0x11, 0xb1, 0x12, 0xae, 0x3d, 0x2a, 0xcc, 0x7a, 0x10, 0xdf, 0xb8, 0x26, 0xfd, 0x2d, 0xad,
		0xc9, 0xf3, 0x51, 0x1c, 0x0e, 0xc4, 0xaa, 0x2d, 0x31, 0x10, 0x6b, 0x66, 0xb9, 0x6e, 0x96, 0xdf,
		0x9b, 0xe5, 0x0f, 0x66, 0xb9, 0x61, 0x94, 0x20, 0x36, 0xad, 0x70, 0xcb, 0x06, 0x41, 0x6c, 0x1b,
		0xdd, 0x8f, 0x49, 0x05, 0x7c, 0x7c, 0x22, 0xa8, 0x80, 0xfc, 0x54, 0xcf, 0xf5, 0x95, 0x4b, 0x04,
		0x25, 0xfd, 0x73, 0xc8, 0xaa, 0x77, 0x13, 0x0e, 0xc4, 0x2f, 0x65, 0xe1, 0x50, 0x29, 0xd8, 0x2d,
		0xfd, 0xd5, 0x45, 0xdd, 0xe3, 0xda, 0x33, 0x03, 0xb1, 0x63, 0x4b, 0x0c, 0xc4, 0xae, 0x59, 0xee,
		0x99, 0xe5, 0xbe, 0x59, 0x1e, 0x98, 0xe5, 0xa1, 0x51, 0x82, 0x38, 0xb2, 0xc2, 0x63, 0x1b, 0x04,
		0x71, 0x62, 0x74, 0xa7, 0xf1, 0x7e, 0xc2, 0x91, 0x88, 0x7c, 0x5b, 0x7c, 0x11, 0xff, 0x40, 0xa5,
		0xa6, 0xf8, 0xcf, 0xa4, 0x29, 0x8e, 0x5d, 0x54, 0x6c, 0x8a, 0x29, 0x2d, 0xae, 0x30, 0x94, 0x7b,
		0x5f, 0xe6, 0x85, 0x6d, 0x61, 0xa5, 0x2d, 0x82, 0x28, 0x89, 0x48, 0x44, 0x90, 0x08, 0x78, 0x91,
		0x4b, 0x7b, 0xb8, 0x72, 0x4b, 0x79, 0xa1, 0x70, 0x7e, 0x9e, 0xf2, 0x22, 0xe5, 0x25, 0x4a, 0x27,
		0xa5, 0x8b, 0xd2, 0x4d, 0xe9, 0xbb, 0x5e, 0x11, 0x4a, 0x7f, 0xc3, 0xde, 0x0a, 0xb7, 0x28, 0xdc,
		0x2c, 0xca, 0xc0, 0x9d, 0xbb, 0xd5, 0xd8, 0xaf, 0xa6, 0x44, 0xdc, 0x39, 0x82, 0x26, 0xfc, 0xe0,
		0x03, 0x7d, 0xc8, 0x3d, 0x3c, 0x14, 0xf2, 0xe9, 0x28, 0x7e, 0x0f, 0x4c, 0x79, 0xcd, 0xb6, 0x5b,
		0x52, 0x76, 0xc5, 0x70, 0x54, 0xfb, 0x2b, 0xa5, 0x98, 0xa0, 0xbc, 0xe1, 0x93, 0x03, 0x28, 0x23,
		0x9e, 0xfe, 0x4d, 0x4f, 0x3f, 0xea, 0xe9, 0xc7, 0x3c, 0xfd, 0x5b, 0x5e, 0x1e, 0x94, 0x71, 0x2f,
		0x3d, 0xe1, 0xa1, 0x41, 0x99, 0xf4, 0xb0, 0x53, 0x8d, 0xb0, 0xab, 0x76, 0xdd, 0xe6, 0xca, 0x3b,
		0xd5, 0x86, 0xa1, 0x64, 0x0b, 0xe7, 0x69, 0xca, 0x0c, 0xe5, 0x3d, 0xca, 0xfb, 0x94, 0x0f, 0x28,
		0x1f, 0x52, 0x66, 0xf3, 0x2f, 0x89, 0xb9, 0x86, 0x2d, 0x1f, 0x91, 0x88, 0xfc, 0x6d, 0xcc, 0xc5,
		0x3f, 0x50, 0x71, 0xb5, 0x20, 0x8b, 0xc9, 0x6a, 0x21, 0x76, 0x11, 0x6e, 0x0b, 0x3d, 0x11, 0x89,
		0x88, 0x5b, 0x04, 0x75, 0x31, 0xeb, 0xb1, 0xf5, 0xad, 0xf9, 0x02, 0xb7, 0x51, 0x75, 0x18, 0xa7,
		0x28, 0x15, 0xb8, 0xed, 0xa4, 0xc0, 0xc5, 0x2e, 0xc2, 0x15, 0xb8, 0xa0, 0xc9, 0xb7, 0x53, 0xdd,
		0x02, 0x13, 0x94, 0x3d, 0xdb, 0xf2, 0xb2, 0xec, 0x8a, 0xfd, 0xa8, 0x16, 0xa4, 0xa5, 0x98, 0xa0,
		0x1c, 0xfa, 0xe4, 0x00, 0xca, 0x91, 0xa7, 0x3f, 0xf6, 0xf4, 0x27, 0x9e, 0xfe, 0xd4, 0xd3, 0xff,
		0xee, 0xe5, 0x41, 0x39, 0xf3, 0xd2, 0xe7, 0x1e, 0x1a, 0x94, 0x0b, 0x0f, 0x7b, 0xf9, 0x48, 0xb6,
		0x21, 0xdc, 0x22, 0xe8, 0xa1, 0xfb, 0x2b, 0xec, 0x43, 0x97, 0x2d, 0xfe, 0xe7, 0xca, 0xd6, 0xae,
		0x97, 0x5d, 0xc1, 0xa8, 0x1a, 0xfc, 0x52, 0x4c, 0x30, 0x2d, 0x3e, 0x39, 0x80, 0xe9, 0x26, 0x4f,
		0xff, 0x94, 0xa7, 0x7f, 0xda, 0xd3, 0x37, 0x7b, 0xfa, 0x8c, 0x97, 0x07, 0xd3, 0x2d, 0x5e, 0xfa,
		0x89, 0x87, 0x06, 0xd3, 0xad, 0x1e, 0xf6, 0xd9, 0xff, 0xcf, 0xb2, 0x2e, 0x11, 0x0d, 0x29, 0x02,
		0x8a, 0x61, 0x3a, 0xe4, 0x16, 0x77, 0x22, 0x12, 0xf1, 0x90, 0x08, 0x9a, 0x6e, 0xcf, 0x3d, 0xb2,
		0xe9, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0x22, 0x9c, 0x38, 0x8a, 0x39, 0x00, 0x00,
	}
	buf, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		panic(err)
	}
	dec := gob.NewDecoder(buf)
	if err := dec.Decode(&tab); err != nil {
		panic(err)
	}
	for i := 0; i < numStates; i++ {
		for j := 0; j < numNTSymbols; j++ {
			gotoTab[i][j] = tab[i][j]
		}
	}
}
