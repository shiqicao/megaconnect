// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"bytes"
	"compress/gzip"
	"encoding/gob"
)

const numNTSymbols = 29

type (
	gotoTable [numStates]gotoRow
	gotoRow   [numNTSymbols]int
)

var gotoTab = gotoTable{}

func init() {
	tab := [][]int{}
	data := []byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xec, 0x97, 0xc1, 0x4b, 0x54, 0x51,
		0x14, 0xc6, 0xdf, 0x77, 0x11, 0x11, 0x99, 0x44, 0x86, 0x88, 0x16, 0xda, 0x22, 0x0c, 0x22, 0x4a,
		0x66, 0x11, 0x2d, 0x65, 0x16, 0x22, 0x31, 0x0c, 0x22, 0x32, 0x0c, 0x21, 0x12, 0x11, 0xd1, 0x22,
		0x2c, 0xa2, 0x55, 0x44, 0x2b, 0x17, 0x61, 0x93, 0xeb, 0x88, 0x08, 0x89, 0x90, 0x56, 0xfd, 0x15,
		0x11, 0x21, 0x21, 0x12, 0x11, 0x12, 0x21, 0x12, 0xad, 0xa4, 0x45, 0x44, 0x44, 0xcb, 0xef, 0xc4,
		0x4c, 0x6f, 0xc6, 0xc9, 0x66, 0xee, 0x3d, 0xbe, 0x37, 0x77, 0x46, 0xea, 0xbe, 0x85, 0x17, 0xf9,
		0xfd, 0xee, 0x39, 0x87, 0xf7, 0xde, 0xb9, 0x73, 0xde, 0x21, 0x79, 0x60, 0x60, 0x64, 0x39, 0x82,
		0x54, 0xa2, 0x28, 0x23, 0xf7, 0xab, 0xff, 0x55, 0x22, 0xf4, 0x45, 0x11, 0x4f, 0x5c, 0x97, 0xe5,
		0x88, 0x38, 0x33, 0x0a, 0x83, 0xf6, 0xd7, 0xa8, 0x85, 0xa5, 0xa6, 0x83, 0x99, 0x21, 0x0c, 0x03,
		0xc8, 0xb6, 0xde, 0x3b, 0x62, 0xa5, 0xde, 0xaa, 0x0a, 0x74, 0x9f, 0x34, 0x87, 0x71, 0xf7, 0xde,
		0xb3, 0xe7, 0xba, 0x5c, 0x15, 0xf2, 0xde, 0x22, 0x6b, 0x68, 0xa1, 0xe8, 0xd8, 0x5b, 0xae, 0xfd,
		0x2d, 0xcd, 0xcd, 0x5f, 0xbc, 0x74, 0xf9, 0x2f, 0xba, 0xe0, 0xa9, 0x2a, 0x07, 0xbd, 0x6d, 0xa5,
		0x77, 0xbc, 0xe5, 0xb5, 0x52, 0x59, 0x74, 0xdd, 0x4a, 0x07, 0x95, 0x25, 0xc8, 0xbd, 0x3f, 0xb9,
		0x54, 0x3a, 0x51, 0x59, 0x35, 0xd0, 0xa3, 0xdf, 0xcb, 0x43, 0x79, 0x22, 0x2b, 0xf2, 0x54, 0x9e,
		0xc9, 0x6a, 0xaf, 0xdb, 0xb1, 0x57, 0x34, 0x07, 0x79, 0x79, 0x00, 0xcb, 0x92, 0x57, 0xce, 0xcd,
		0xf2, 0x06, 0xb2, 0xe6, 0xb1, 0x30, 0x59, 0xb7, 0xe3, 0x0d, 0x6f, 0x99, 0xd3, 0x52, 0xd9, 0xf4,
		0x14, 0xba, 0x1c, 0xc7, 0xdf, 0x6a, 0x79, 0xfc, 0x35, 0xf0, 0x76, 0x6b, 0xec, 0xc8, 0x5c, 0x6d,
		0xf8, 0x4f, 0x49, 0x2b, 0xb3, 0xd3, 0x7a, 0xbf, 0xef, 0x84, 0x7e, 0xdf, 0xbd, 0xe2, 0xa7, 0x05,
		0x22, 0xb2, 0x3d, 0x4d, 0x10, 0xc6, 0xc1, 0xfb, 0x1c, 0xbc, 0xdf, 0xc1, 0x07, 0x1c, 0x7c, 0xd0,
		0xca, 0x41, 0x64, 0x1c, 0x7c, 0xc8, 0xca, 0x41, 0x0c, 0x3b, 0x78, 0x76, 0xff, 0xaf, 0x73, 0xf7,
		0x29, 0x31, 0xd2, 0xcb, 0xba, 0x88, 0xb1, 0x78, 0x3d, 0x4e, 0x9c, 0x24, 0x4e, 0x11, 0xa7, 0x89,
		0x71, 0x22, 0xd7, 0xed, 0xbb, 0x43, 0xe4, 0x89, 0x09, 0x5f, 0xd1, 0xdb, 0xd3, 0xf8, 0x98, 0x01,
		0x31, 0xd9, 0xfe, 0x98, 0xd9, 0x95, 0xa6, 0xfc, 0x9c, 0x45, 0xf5, 0x04, 0x20, 0x0a, 0xae, 0x22,
		0x40, 0x14, 0x15, 0xce, 0xb4, 0xc2, 0x99, 0x51, 0x38, 0xb3, 0x0a, 0xa7, 0xe4, 0x74, 0x40, 0x94,
		0xdd, 0xca, 0x05, 0x97, 0x02, 0x62, 0xce, 0x69, 0xcc, 0x87, 0x5f, 0x8a, 0x83, 0x4a, 0x89, 0xab,
		0xf1, 0x7a, 0x85, 0xb8, 0x46, 0x2c, 0x10, 0x37, 0x88, 0x9b, 0xc4, 0x2d, 0x7d, 0x24, 0xee, 0xf9,
		0x3c, 0x4a, 0x54, 0xa5, 0x2c, 0x81, 0xb8, 0x9b, 0x78, 0xbb, 0x95, 0xc6, 0x2f, 0x23, 0xb1, 0x18,
		0x46, 0x97, 0xa6, 0x8b, 0x78, 0x6c, 0xe3, 0xc4, 0x4a, 0xca, 0xdc, 0xc4, 0x6a, 0x8a, 0xdd, 0x81,
		0xfe, 0xc3, 0xb4, 0xd6, 0xee, 0xcf, 0xfd, 0x04, 0x6f, 0xb4, 0xfb, 0x8b, 0xd0, 0xee, 0x9d, 0xa1,
		0xf5, 0xa9, 0x14, 0xc4, 0x6b, 0xfb, 0x4c, 0xda, 0x64, 0xae, 0xa5, 0x99, 0x5e, 0x1b, 0x71, 0x40,
		0xac, 0x6b, 0xf2, 0x81, 0xd8, 0x50, 0x7a, 0x6f, 0x95, 0xde, 0x3b, 0xa5, 0xf7, 0x5e, 0xe9, 0x6d,
		0xaa, 0x3c, 0x10, 0x1f, 0x54, 0xd6, 0x47, 0x85, 0x05, 0x62, 0x4b, 0xe1, 0x6c, 0x77, 0xfe, 0xfb,
		0xa2, 0xd6, 0xe0, 0x9f, 0x93, 0x6e, 0x27, 0xbe, 0xc4, 0xeb, 0x0e, 0xf1, 0x95, 0xf8, 0x46, 0x7c,
		0x27, 0x7e, 0x10, 0x3f, 0x7b, 0x31, 0x1c, 0x81, 0x26, 0xb2, 0x8f, 0x46, 0x4d, 0xa6, 0x49, 0x36,
		0x44, 0xed, 0x89, 0x03, 0x9a, 0x7e, 0x4d, 0x3e, 0xd0, 0x0c, 0x28, 0xbd, 0x41, 0xa5, 0x97, 0x51,
		0x7a, 0x43, 0x4a, 0x6f, 0x58, 0xe5, 0x81, 0x26, 0xab, 0xb2, 0x0e, 0x2b, 0x2c, 0xd0, 0x1c, 0x51,
		0x38, 0x47, 0x13, 0x3c, 0xa1, 0x40, 0xff, 0x6b, 0x5a, 0x3d, 0xd6, 0xcc, 0x31, 0x3f, 0xc1, 0xeb,
		0x73, 0x8b, 0x19, 0x0b, 0x73, 0x4b, 0xa0, 0x81, 0xa2, 0x69, 0x10, 0x00, 0xcd, 0x84, 0x7d, 0x0c,
		0x68, 0x32, 0xf3, 0x69, 0x06, 0x86, 0x46, 0x1c, 0xd0, 0x4c, 0x6a, 0xf2, 0x81, 0x66, 0x4a, 0xe9,
		0x9d, 0x57, 0x7a, 0x05, 0xa5, 0x57, 0x54, 0x7a, 0xd3, 0x2a, 0x0f, 0x34, 0x33, 0x2a, 0x6b, 0x56,
		0x61, 0x81, 0xa6, 0xa4, 0x70, 0xca, 0x5d, 0x1e, 0xe9, 0x02, 0xed, 0x3e, 0xfd, 0x15, 0x00, 0x00,
		0xff, 0xff, 0x7c, 0xe7, 0xd8, 0x86, 0x8b, 0x25, 0x00, 0x00,
	}
	buf, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		panic(err)
	}
	dec := gob.NewDecoder(buf)
	if err := dec.Decode(&tab); err != nil {
		panic(err)
	}
	for i := 0; i < numStates; i++ {
		for j := 0; j < numNTSymbols; j++ {
			gotoTab[i][j] = tab[i][j]
		}
	}
}
