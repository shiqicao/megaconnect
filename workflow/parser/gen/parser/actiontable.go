// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"bytes"
	"compress/gzip"
	"encoding/gob"
)

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{}

func init() {
	tab := []struct {
		CanRecover bool
		Actions    []struct {
			Index  int
			Action int
			Amount int
		}
	}{}
	data := []byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xec, 0x98, 0xdf, 0x8b, 0xe4, 0x58,
		0x15, 0x80, 0xef, 0x49, 0xdf, 0x2d, 0xc7, 0x72, 0xb6, 0x1d, 0x87, 0xa6, 0x69, 0x86, 0xa1, 0x69,
		0x8a, 0x61, 0x68, 0x9a, 0x61, 0x1c, 0x86, 0x65, 0x19, 0xd6, 0xb6, 0x69, 0xcb, 0xa2, 0x28, 0x8b,
		0xa2, 0x28, 0x42, 0x11, 0x42, 0x8c, 0x21, 0x66, 0x32, 0x4b, 0x76, 0x59, 0x7b, 0x64, 0xb6, 0x77,
		0x11, 0x7f, 0xa1, 0xe3, 0xaa, 0xfb, 0x2c, 0x3e, 0x8b, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0xf8,
		0x20, 0xbe, 0xfb, 0x3f, 0x88, 0xf8, 0x20, 0x3e, 0xf8, 0xe4, 0x1f, 0x90, 0x48, 0xee, 0x57, 0xb9,
		0x3d, 0x5d, 0x9b, 0x5a, 0xa6, 0xab, 0x2a, 0xc3, 0x3c, 0x34, 0x03, 0x7b, 0xc3, 0xed, 0xe4, 0xfb,
		0x4e, 0x92, 0xad, 0x73, 0x4e, 0xce, 0xab, 0xc5, 0x8f, 0x1d, 0x71, 0x8a, 0x0f, 0x95, 0x14, 0x4f,
		0x95, 0xda, 0x2f, 0xbe, 0xbf, 0x21, 0x4e, 0xf1, 0x54, 0x89, 0x23, 0xed, 0x2f, 0x7e, 0xf5, 0xc4,
		0x7d, 0xf4, 0xf0, 0xf1, 0xfb, 0x8f, 0x9e, 0x88, 0xa3, 0xe4, 0x13, 0x5f, 0x78, 0x78, 0xfa, 0xd6,
		0xe3, 0x93, 0x77, 0xa5, 0xf8, 0x91, 0x52, 0xea, 0xf3, 0xc5, 0x0f, 0x1d, 0x91, 0xbb, 0x5f, 0xfe,
		0xca, 0xbb, 0xa7, 0x4f, 0xde, 0x7b, 0x78, 0xba, 0xf7, 0xad, 0xbd, 0x2f, 0x9d, 0xa4, 0x8f, 0xbe,
		0xb1, 0xf7, 0xd6, 0xc9, 0xe9, 0xe7, 0xf6, 0x38, 0x73, 0x76, 0xfc, 0xb5, 0xc7, 0xef, 0x9d, 0x9c,
		0x96, 0xc7, 0x7b, 0xdf, 0x29, 0x2f, 0x95, 0xe2, 0x03, 0xa5, 0xee, 0x14, 0x3f, 0x28, 0x35, 0x1f,
		0x28, 0xd9, 0x90, 0x57, 0xcc, 0x85, 0xa2, 0x95, 0xb4, 0xb8, 0x8e, 0x43, 0x73, 0x99, 0x68, 0xa5,
		0x54, 0xfe, 0xd9, 0xcf, 0x14, 0x1f, 0xaa, 0xe2, 0xef, 0x8e, 0x88, 0x2e, 0xff, 0x29, 0xe5, 0x88,
		0x38, 0xe6, 0xbf, 0x2d, 0xd1, 0xd2, 0x32, 0x47, 0x57, 0x44, 0xcb, 0x15, 0xa5, 0x9c, 0x0d, 0x69,
		0x8b, 0x23, 0x57, 0x95, 0x6c, 0x8a, 0x96, 0xeb, 0x4a, 0x76, 0x44, 0xcb, 0xd6, 0x6c, 0x5f, 0xcb,
		0x76, 0xed, 0xbe, 0x53, 0x1a, 0x37, 0x59, 0x76, 0xcc, 0x52, 0xed, 0x5f, 0x61, 0xff, 0x0a, 0xfb,
		0x67, 0xfc, 0x36, 0xfb, 0x6d, 0xf6, 0xdb, 0x36, 0x96, 0x1b, 0x36, 0x96, 0x9b, 0x44, 0x59, 0xfe,
		0xb3, 0x57, 0xb5, 0xb8, 0xaa, 0xc5, 0x55, 0xc4, 0x7d, 0x4d, 0xb4, 0xec, 0xda, 0xeb, 0xf7, 0xec,
		0xd1, 0x6d, 0x73, 0x74, 0x43, 0xb4, 0xec, 0x2b, 0xe5, 0x38, 0xb3, 0xbf, 0x9a, 0x9b, 0x38, 0x98,
		0x6d, 0x38, 0xb2, 0xa3, 0x0c, 0x77, 0xc7, 0x9c, 0x7b, 0x5d, 0xb4, 0xdc, 0x35, 0xae, 0x9b, 0xa2,
		0xe5, 0xbe, 0x92, 0x5d, 0xd1, 0xf2, 0x9a, 0x92, 0x3d, 0xd1, 0xf2, 0xba, 0x8d, 0x61, 0x8b, 0x18,
		0xb6, 0x88, 0x61, 0xcb, 0xa2, 0x6e, 0x80, 0x2a, 0x6f, 0xe0, 0x15, 0x23, 0x7b, 0xa0, 0xe4, 0x58,
		0xb4, 0xf4, 0x95, 0x74, 0x45, 0xcb, 0x40, 0x49, 0x4f, 0xb4, 0x0c, 0x95, 0xf4, 0x45, 0xcb, 0xc8,
		0x5e, 0xb6, 0xcd, 0x65, 0xdb, 0x76, 0xe3, 0x26, 0x1b, 0x37, 0xed, 0xc6, 0x2e, 0x1b, 0xbb, 0x76,
		0x63, 0x8f, 0x8d, 0xf2, 0x56, 0x3f, 0x2d, 0x5b, 0xe2, 0xc8, 0x9b, 0x4a, 0xb6, 0x59, 0x6e, 0xb3,
		0xec, 0xb3, 0x1c, 0xb0, 0xdc, 0x61, 0xb9, 0xcb, 0x72, 0x8f, 0xe5, 0x3e, 0xcb, 0x6b, 0x2c, 0xaf,
		0xb3, 0x3c, 0x60, 0x79, 0x83, 0xe5, 0x90, 0xe5, 0xc8, 0x2c, 0xca, 0xd1, 0xc6, 0x75, 0xbd, 0x74,
		0x69, 0x99, 0x94, 0x2e, 0x2d, 0x6e, 0xe9, 0xd2, 0x32, 0x55, 0xca, 0x69, 0x9b, 0x3f, 0x1f, 0x13,
		0xca, 0x31, 0xa1, 0x1c, 0x13, 0xca, 0x71, 0x19, 0x8a, 0x16, 0xaf, 0x0c, 0x45, 0x8b, 0x5f, 0x86,
		0xa2, 0x25, 0x28, 0x43, 0xd1, 0x12, 0x96, 0xa1, 0x68, 0x89, 0xca, 0x50, 0xb4, 0xc4, 0x4a, 0x39,
		0x57, 0x0d, 0x68, 0x0c, 0x68, 0x0c, 0x68, 0x0c, 0x68, 0xcc, 0x3d, 0x8d, 0xb9, 0xa7, 0x31, 0xf7,
		0x34, 0xe6, 0x9e, 0xc6, 0xdc, 0xd3, 0x98, 0x7b, 0x1a, 0x97, 0xf7, 0xa4, 0x25, 0x29, 0xef, 0x49,
		0x4b, 0xaa, 0x94, 0xb3, 0x69, 0xb0, 0x53, 0xb0, 0x53, 0xb0, 0x53, 0xb0, 0x53, 0xb0, 0x53, 0xb0,
		0x53, 0xb0, 0x53, 0xb0, 0x53, 0xb0, 0x53, 0xb0, 0x53, 0x1e, 0xd5, 0x94, 0x47, 0x35, 0x2d, 0x1f,
		0x95, 0xe6, 0x51, 0x69, 0xc9, 0xec, 0xfb, 0x08, 0x90, 0x04, 0x48, 0x02, 0x24, 0x01, 0x92, 0x00,
		0x49, 0x80, 0x24, 0x40, 0x12, 0x20, 0x09, 0x90, 0x04, 0x48, 0x02, 0x24, 0x01, 0xef, 0x23, 0xe0,
		0x7d, 0x04, 0xe5, 0xfb, 0xd0, 0xf2, 0xb6, 0x75, 0x45, 0xb8, 0x22, 0x5c, 0x11, 0xae, 0x08, 0x57,
		0x84, 0x2b, 0xc2, 0x15, 0xe1, 0x8a, 0x70, 0x45, 0xb8, 0x22, 0x5c, 0x11, 0xae, 0x08, 0x57, 0x84,
		0x2b, 0xe2, 0xdd, 0x47, 0xd6, 0x15, 0xe3, 0x8a, 0x71, 0xc5, 0xb8, 0x62, 0x5c, 0x31, 0xae, 0x18,
		0x57, 0x8c, 0x2b, 0xc6, 0x15, 0xe3, 0x8a, 0x71, 0xc5, 0xb8, 0x62, 0x5c, 0x31, 0xae, 0x18, 0x57,
		0x6c, 0x5d, 0x09, 0xae, 0x04, 0x57, 0x82, 0x2b, 0xc1, 0x95, 0xe0, 0x4a, 0x70, 0x25, 0xb8, 0x12,
		0x5c, 0x09, 0xae, 0x04, 0x57, 0x82, 0x2b, 0xc1, 0x95, 0xe0, 0x4a, 0x70, 0x25, 0xd6, 0x95, 0xe2,
		0x4a, 0x71, 0xa5, 0xb8, 0x52, 0x5c, 0x29, 0xae, 0x14, 0x57, 0x8a, 0x2b, 0xc5, 0x95, 0xe2, 0x4a,
		0x71, 0xa5, 0xb8, 0x52, 0x5c, 0x29, 0xae, 0x14, 0x57, 0x6a, 0xb3, 0xc2, 0x3b, 0x64, 0x85, 0x6f,
		0x92, 0x15, 0xbe, 0x4d, 0x56, 0xf8, 0x2e, 0x59, 0xa1, 0xf8, 0x9e, 0xc9, 0x43, 0x5b, 0xe5, 0xe1,
		0x53, 0x9b, 0x08, 0xcb, 0x74, 0xff, 0x9c, 0x29, 0xe5, 0xf2, 0xac, 0x97, 0xfd, 0x2c, 0x6a, 0x53,
		0xf1, 0x33, 0x93, 0x90, 0x9a, 0xcb, 0xd6, 0x32, 0x98, 0x25, 0xed, 0x0d, 0x93, 0xa6, 0x8b, 0x9f,
		0x93, 0xa7, 0x8b, 0x5f, 0x94, 0x7f, 0xd1, 0x52, 0xfc, 0x52, 0x29, 0xe7, 0x93, 0x35, 0x29, 0xba,
		0xf8, 0x15, 0x39, 0xba, 0xf8, 0x35, 0x49, 0xba, 0xf8, 0x0d, 0x59, 0xba, 0xf8, 0x2d, 0x69, 0xba,
		0xf8, 0x1d, 0x79, 0xba, 0xf8, 0x3d, 0x8a, 0x63, 0xa5, 0x9c, 0x4f, 0xad, 0x94, 0xa1, 0x8b, 0x3f,
		0x90, 0xa2, 0x8b, 0x3f, 0x42, 0x1c, 0x2b, 0xe5, 0xbc, 0xba, 0xc6, 0xe4, 0x5c, 0xfc, 0x89, 0xec,
		0x5c, 0xfc, 0x19, 0xfe, 0xd4, 0x3e, 0xf9, 0x26, 0xf2, 0x72, 0xf1, 0x17, 0x2c, 0x81, 0xb5, 0x34,
		0x93, 0x91, 0x8d, 0x24, 0xb2, 0x92, 0x66, 0x52, 0xb1, 0x91, 0xc4, 0x56, 0xd2, 0x4c, 0x0e, 0x36,
		0x92, 0xc4, 0x4a, 0x9a, 0x49, 0xbe, 0x46, 0x72, 0xa1, 0x1c, 0x6c, 0x7e, 0xa5, 0x7f, 0xb5, 0x8d,
		0x63, 0xf1, 0x37, 0x7a, 0xae, 0xbb, 0xb6, 0xd1, 0x39, 0xa4, 0x66, 0x1c, 0x52, 0x33, 0x0e, 0x09,
		0xfb, 0xf0, 0x42, 0x8d, 0x0e, 0xa0, 0x23, 0x40, 0x47, 0x80, 0x8e, 0x00, 0x1d, 0x2d, 0xd1, 0x31,
		0x75, 0x01, 0x75, 0x01, 0x75, 0x01, 0x75, 0x79, 0x90, 0x5d, 0x1e, 0x64, 0x97, 0x07, 0xd9, 0xe5,
		0x41, 0x76, 0x79, 0x90, 0x5d, 0x1e, 0x64, 0xf7, 0x23, 0x1d, 0x13, 0xd8, 0x1e, 0xd8, 0x1e, 0xd8,
		0x1e, 0xd8, 0x1e, 0xd8, 0x1e, 0xd8, 0x1e, 0xd8, 0x1e, 0xd8, 0x1e, 0xd8, 0x1e, 0xd8, 0xde, 0x02,
		0x6c, 0x1f, 0x6c, 0x1f, 0x6c, 0x1f, 0x6c, 0x1f, 0x6c, 0x1f, 0x6c, 0x1f, 0x6c, 0x1f, 0x6c, 0x1f,
		0x6c, 0x1f, 0x6c, 0x7f, 0x01, 0x76, 0x00, 0x76, 0x00, 0x76, 0x00, 0x76, 0x00, 0x76, 0x00, 0x76,
		0x00, 0x76, 0x00, 0x76, 0x00, 0x76, 0x00, 0x76, 0xb0, 0x00, 0x3b, 0x04, 0x3b, 0x04, 0x3b, 0x04,
		0x3b, 0x04, 0x3b, 0x04, 0x3b, 0x04, 0x3b, 0x04, 0x3b, 0x04, 0x3b, 0x04, 0x3b, 0x5c, 0x80, 0x1d,
		0x81, 0x1d, 0x81, 0x1d, 0x81, 0x1d, 0x81, 0x1d, 0x81, 0x1d, 0x81, 0x1d, 0x81, 0x1d, 0x81, 0x1d,
		0x81, 0x1d, 0x2d, 0x68, 0x72, 0x27, 0x60, 0x27, 0x60, 0x27, 0x60, 0x27, 0x60, 0x27, 0x60, 0x27,
		0x60, 0x27, 0x60, 0x27, 0x60, 0x27, 0x60, 0x27, 0xfc, 0xa4, 0x26, 0xfc, 0xa4, 0x26, 0x1f, 0x69,
		0x72, 0x91, 0xb8, 0x48, 0x5c, 0x24, 0x2e, 0x12, 0x17, 0x89, 0x8b, 0xc4, 0x45, 0xe2, 0x22, 0x71,
		0x91, 0xb8, 0x48, 0x5c, 0x24, 0x2e, 0x12, 0x77, 0x41, 0x27, 0xed, 0x21, 0xf1, 0x90, 0x78, 0x48,
		0x3c, 0x24, 0x1e, 0x12, 0x0f, 0x89, 0x87, 0xc4, 0x43, 0xe2, 0x21, 0xf1, 0x90, 0x78, 0x48, 0x3c,
		0x92, 0x83, 0x47, 0x72, 0xf0, 0xe6, 0x3b, 0x69, 0x1f, 0x97, 0x8f, 0xcb, 0xc7, 0xe5, 0xe3, 0xf2,
		0x71, 0xf9, 0xb8, 0x7c, 0x5c, 0x3e, 0x2e, 0x1f, 0x97, 0x8f, 0xcb, 0xc7, 0xe5, 0xe3, 0xf2, 0x71,
		0xf9, 0xf3, 0xae, 0x10, 0x57, 0x88, 0x2b, 0xc4, 0x15, 0xe2, 0x0a, 0x71, 0x85, 0xb8, 0x42, 0x5c,
		0x21, 0xae, 0x10, 0x57, 0x88, 0x2b, 0xc4, 0x15, 0xe2, 0x0a, 0x71, 0x85, 0x24, 0xbd, 0xf0, 0xf9,
		0xb3, 0xdd, 0x73, 0x9e, 0x46, 0xe4, 0x19, 0x91, 0x67, 0x44, 0x9e, 0x11, 0x79, 0x46, 0xe4, 0x19,
		0x91, 0x67, 0x44, 0x9e, 0x11, 0x79, 0x46, 0xe4, 0x19, 0x91, 0x67, 0x44, 0x9e, 0x11, 0x79, 0x46,
		0xe4, 0x19, 0x91, 0x67, 0x44, 0x9e, 0xad, 0x3d, 0xf2, 0xcb, 0xd3, 0x96, 0x3b, 0x6d, 0x56, 0x06,
		0xff, 0xb1, 0xb8, 0x8f, 0xfc, 0xe7, 0xd9, 0x57, 0xca, 0xbf, 0xcc, 0xe1, 0xad, 0xf2, 0xf0, 0xdf,
		0x73, 0x75, 0x53, 0x4b, 0xf1, 0x1f, 0x3b, 0xbd, 0xb8, 0x47, 0x25, 0xbd, 0x67, 0x3b, 0xd0, 0xf3,
		0xb5, 0xf3, 0xa2, 0x1d, 0xe8, 0xa1, 0xe5, 0x9c, 0x2f, 0x9d, 0x17, 0xe5, 0x1c, 0xd9, 0x4e, 0x76,
		0xd9, 0xca, 0x39, 0xdf, 0xc9, 0x76, 0x2d, 0x71, 0xd9, 0xa2, 0x39, 0x4f, 0xec, 0x59, 0xe2, 0xb2,
		0xf5, 0x72, 0x9e, 0xd8, 0xb7, 0xc4, 0x65, 0x4b, 0xe5, 0x3c, 0x71, 0x60, 0x89, 0xcb, 0x56, 0xc9,
		0x79, 0xe2, 0xd0, 0x12, 0x97, 0x2d, 0x90, 0xf3, 0xc4, 0x91, 0xfd, 0xc6, 0x58, 0x4f, 0x6d, 0x9c,
		0xff, 0xc6, 0x98, 0x58, 0xfe, 0x7a, 0xca, 0xe2, 0x3c, 0xdf, 0xb5, 0xed, 0x72, 0x13, 0x15, 0xb1,
		0xfa, 0x86, 0xf1, 0xac, 0xa5, 0x89, 0x5a, 0x58, 0x59, 0x7c, 0x6b, 0x69, 0xa6, 0x0a, 0x1a, 0x49,
		0x68, 0x25, 0xcd, 0x14, 0x2c, 0x23, 0xc9, 0xce, 0xb2, 0xde, 0x7f, 0xc9, 0x71, 0xb7, 0xed, 0xd0,
		0x78, 0x93, 0xa1, 0xf1, 0x26, 0x43, 0xe3, 0x4d, 0x9b, 0x82, 0x8b, 0xff, 0x91, 0x83, 0x73, 0x51,
		0x64, 0xe1, 0x5c, 0x1c, 0xf2, 0x70, 0x2e, 0x9a, 0x4c, 0x9c, 0xcf, 0xe6, 0xdc, 0x65, 0xf1, 0xbd,
		0x66, 0xb3, 0xe8, 0x7d, 0x0c, 0xf7, 0xed, 0x90, 0x3b, 0x37, 0xc3, 0xf5, 0x67, 0xfd, 0xe5, 0x5e,
		0xdb, 0x5e, 0xb0, 0xcf, 0x05, 0xfb, 0xa6, 0x90, 0xb7, 0x18, 0x12, 0xb4, 0x5f, 0xc4, 0xd0, 0xb8,
		0x74, 0xdd, 0xc1, 0x75, 0x87, 0xa1, 0x71, 0x5e, 0x3e, 0x87, 0x7d, 0x73, 0x70, 0xcd, 0x7c, 0x06,
		0xb5, 0x18, 0x40, 0xb4, 0x17, 0x0d, 0x8e, 0x73, 0xb9, 0x4e, 0x32, 0xcf, 0x65, 0x8b, 0x6c, 0x9e,
		0xcb, 0x36, 0xe9, 0x3c, 0x97, 0x1d, 0xf2, 0x79, 0x2e, 0x37, 0x48, 0xe8, 0xb9, 0x19, 0x9d, 0x5f,
		0x35, 0xd0, 0x31, 0xd0, 0x15, 0x87, 0xc8, 0xb9, 0xec, 0x92, 0x3f, 0x72, 0x33, 0x73, 0xdf, 0x34,
		0xe8, 0x29, 0xe8, 0xb5, 0x0e, 0x92, 0x73, 0xe9, 0xf0, 0x43, 0xcf, 0xe5, 0x96, 0x7d, 0x4f, 0x01,
		0xa2, 0x06, 0x87, 0xc9, 0xb9, 0xf9, 0x1f, 0x15, 0x5b, 0x84, 0xad, 0xf1, 0x71, 0x72, 0x8b, 0x09,
		0x43, 0xfb, 0x45, 0x8c, 0x93, 0x5b, 0x0c, 0x1a, 0xda, 0x2f, 0x62, 0x9c, 0xdc, 0x62, 0xde, 0xd0,
		0x7e, 0x69, 0xc6, 0xc9, 0x9c, 0x96, 0xcb, 0x41, 0x95, 0x68, 0x1e, 0x54, 0x89, 0xe6, 0x8d, 0x2a,
		0xd1, 0x1c, 0x56, 0x89, 0xe6, 0xc8, 0xe6, 0xab, 0x0e, 0xf9, 0xaa, 0x43, 0xbe, 0xea, 0xd8, 0x2c,
		0x72, 0xc0, 0xad, 0x1d, 0x5c, 0x3c, 0x81, 0x5d, 0x9e, 0x7e, 0x79, 0xfa, 0xec, 0x83, 0x22, 0x37,
		0x45, 0xbf, 0xfe, 0x8b, 0x22, 0x9f, 0x8d, 0x4e, 0x3b, 0xcd, 0x97, 0xa6, 0x0d, 0xe9, 0x18, 0x61,
		0x58, 0x55, 0xa5, 0xa8, 0xaa, 0x4a, 0xb1, 0xf9, 0xa6, 0xe8, 0x2c, 0x2e, 0x47, 0x49, 0x55, 0x8e,
		0xd2, 0xaa, 0x1c, 0xbd, 0x59, 0x95, 0xa3, 0xac, 0x2a, 0x47, 0x6f, 0x57, 0xe5, 0xe8, 0x1d, 0xd3,
		0xbf, 0x76, 0xd6, 0x51, 0x87, 0x4e, 0xaa, 0x3a, 0xf4, 0x75, 0xd3, 0x61, 0x76, 0xd6, 0x5f, 0x80,
		0x9e, 0x54, 0x05, 0xe8, 0xd4, 0xbe, 0x86, 0x46, 0x2b, 0xcf, 0xfb, 0x56, 0xd3, 0x70, 0xc9, 0x41,
		0xd2, 0x70, 0xad, 0x41, 0xd2, 0x70, 0x91, 0x41, 0xf2, 0x72, 0x54, 0x17, 0x7a, 0xb7, 0x43, 0xaa,
		0x42, 0xed, 0x2c, 0x7c, 0x89, 0xde, 0x0d, 0xe8, 0x11, 0xd0, 0xda, 0xb9, 0xf8, 0xd2, 0x0d, 0x61,
		0x17, 0xe8, 0x8a, 0x33, 0xf2, 0xb9, 0x86, 0x10, 0x74, 0x0f, 0xf4, 0x8a, 0x73, 0xf2, 0x5a, 0x74,
		0x1f, 0xf4, 0x8a, 0xb3, 0xf2, 0x5a, 0xf4, 0x00, 0xf4, 0x8a, 0xf3, 0xf2, 0x5a, 0xf4, 0x10, 0xf4,
		0x8a, 0x33, 0xf3, 0x5a, 0xf4, 0x08, 0xf4, 0x8a, 0x73, 0xf3, 0xda, 0xbe, 0x7e, 0x02, 0x7a, 0xad,
		0xb3, 0xf3, 0xb9, 0xbe, 0x1e, 0x91, 0x8b, 0x68, 0xad, 0xf3, 0xf3, 0xda, 0x0f, 0x08, 0x0f, 0x51,
		0x83, 0x33, 0xf4, 0x67, 0x3f, 0x20, 0x7c, 0x6c, 0x0d, 0x4e, 0xd1, 0x9f, 0xb5, 0x85, 0xd8, 0x1a,
		0x9e, 0xa3, 0xe3, 0xca, 0x70, 0x35, 0x3c, 0xf9, 0xa6, 0xcf, 0xbe, 0x85, 0xeb, 0xd6, 0x12, 0x0d,
		0xfc, 0xe5, 0xf9, 0x97, 0xe7, 0x3f, 0x7b, 0x7e, 0xd5, 0x73, 0xff, 0xe4, 0x63, 0x7a, 0xee, 0x9f,
		0xda, 0x86, 0x77, 0x41, 0x0d, 0xbf, 0x70, 0xc3, 0x0b, 0x6d, 0x41, 0xf1, 0x5e, 0xb2, 0x7d, 0x5e,
		0xb9, 0x6a, 0x9f, 0x6b, 0x9f, 0x61, 0xae, 0x5c, 0xae, 0x6b, 0x98, 0x2b, 0xd7, 0xe9, 0x1a, 0xe6,
		0xca, 0x05, 0xba, 0x86, 0xb9, 0x72, 0x65, 0xae, 0x61, 0xae, 0x5c, 0x92, 0x6b, 0x3e, 0x71, 0xd6,
		0x5c, 0x8b, 0xcf, 0x7d, 0xe2, 0x60, 0x58, 0x73, 0x11, 0xae, 0xf9, 0x88, 0x6a, 0xb4, 0xfa, 0x9e,
		0x7d, 0x44, 0x35, 0x5a, 0x76, 0xcf, 0x34, 0x0d, 0xd7, 0x5b, 0x24, 0xcd, 0x16, 0xda, 0xff, 0x07,
		0x00, 0x00, 0xff, 0xff, 0x15, 0xfa, 0x3b, 0xd8, 0xb6, 0x2f, 0x00, 0x00,
	}
	buf, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		panic(err)
	}
	dec := gob.NewDecoder(buf)
	if err := dec.Decode(&tab); err != nil {
		panic(err)
	}

	for i, row := range tab {
		actionTab[i].canRecover = row.CanRecover
		for _, a := range row.Actions {
			switch a.Action {
			case 0:
				actionTab[i].actions[a.Index] = accept(true)
			case 1:
				actionTab[i].actions[a.Index] = reduce(a.Amount)
			case 2:
				actionTab[i].actions[a.Index] = shift(a.Amount)
			}
		}
	}
}
