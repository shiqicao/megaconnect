// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"bytes"
	"compress/gzip"
	"encoding/gob"
)

const numNTSymbols = 18

type (
	gotoTable [numStates]gotoRow
	gotoRow   [numNTSymbols]int
)

var gotoTab = gotoTable{}

func init() {
	tab := [][]int{}
	data := []byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe4, 0xd6, 0x4f, 0x2b, 0x44, 0x61,
		0x14, 0x06, 0xf0, 0xf7, 0xdc, 0x66, 0xa5, 0x3b, 0x93, 0x6e, 0x93, 0x24, 0x69, 0x9a, 0x24, 0x4b,
		0x1f, 0x41, 0x92, 0x24, 0x4d, 0xd3, 0x34, 0xc9, 0x5a, 0x92, 0x24, 0x49, 0x92, 0x9d, 0xb5, 0x31,
		0x4b, 0x2b, 0x49, 0x92, 0x24, 0x69, 0x92, 0xac, 0xac, 0x2c, 0x64, 0x21, 0x49, 0x3e, 0x80, 0xcf,
		0x61, 0xa1, 0xf3, 0x68, 0xb6, 0x73, 0x9e, 0x37, 0xd7, 0x65, 0xba, 0xb7, 0x66, 0x76, 0xf3, 0x3b,
		0xe7, 0xce, 0xfb, 0xe7, 0x9c, 0x33, 0xdd, 0x3c, 0x0e, 0x02, 0x09, 0xd0, 0x74, 0x82, 0x86, 0x73,
		0x21, 0xf6, 0xdb, 0xdf, 0x1a, 0x4e, 0x72, 0xce, 0x69, 0x7e, 0x0f, 0x4d, 0x87, 0x56, 0x24, 0x81,
		0x74, 0x7c, 0xa2, 0x4e, 0xf8, 0x05, 0xf5, 0x85, 0x05, 0x93, 0x55, 0xb4, 0xf4, 0x8f, 0x2b, 0x76,
		0x89, 0x4a, 0xe5, 0xd1, 0xb1, 0x71, 0x6f, 0xd6, 0x44, 0x96, 0xb6, 0x5a, 0xa9, 0xd6, 0xea, 0x0b,
		0x89, 0x7e, 0x6b, 0xc9, 0x9e, 0x71, 0x99, 0x1c, 0x7b, 0xc5, 0xd2, 0xaa, 0xa5, 0x35, 0x4b, 0xeb,
		0x96, 0x36, 0x2c, 0x6d, 0x92, 0x8b, 0xde, 0xb2, 0xb4, 0x4d, 0xca, 0xb1, 0x63, 0x69, 0x37, 0xed,
		0x72, 0xc4, 0x23, 0x1c, 0xfe, 0x58, 0x35, 0x1c, 0xe3, 0x28, 0x23, 0xbb, 0x4d, 0x81, 0x70, 0x62,
		0xef, 0x07, 0xa7, 0xf1, 0x3a, 0x1d, 0x67, 0x36, 0x0d, 0xe7, 0xc4, 0x2e, 0x88, 0x5d, 0x12, 0xbb,
		0x22, 0x76, 0x4d, 0xb6, 0x82, 0x16, 0xb1, 0x1b, 0xb2, 0x65, 0xdc, 0x12, 0xbb, 0xf3, 0x1f, 0x0d,
		0xf7, 0xd6, 0x48, 0x5a, 0x3b, 0xf3, 0x21, 0x56, 0x5a, 0x4f, 0x12, 0x9e, 0xf0, 0x18, 0xff, 0x51,
		0x3c, 0xe3, 0x05, 0xaf, 0x78, 0xc3, 0xfb, 0xdf, 0x17, 0xfe, 0x48, 0xfa, 0x64, 0x86, 0x08, 0x9f,
		0xf6, 0x2f, 0x0b, 0x5f, 0x50, 0x15, 0xa7, 0x12, 0xa8, 0xe4, 0x12, 0xad, 0xa3, 0x12, 0xd2, 0x4b,
		0x56, 0x29, 0xf0, 0xcb, 0x57, 0xe9, 0xe7, 0x1c, 0x71, 0x2e, 0x72, 0x1e, 0xe0, 0x3c, 0xc8, 0x79,
		0x88, 0xb6, 0x81, 0xca, 0x30, 0xd5, 0x11, 0xd6, 0x32, 0x2a, 0x25, 0x86, 0xe5, 0xb4, 0xcb, 0x9a,
		0x98, 0x54, 0x26, 0x13, 0xbf, 0x79, 0xf4, 0x02, 0xa9, 0x4c, 0xf9, 0x46, 0x43, 0x65, 0xda, 0x3b,
		0x35, 0x2a, 0x33, 0xbe, 0xc0, 0xac, 0x2f, 0x30, 0xe7, 0x0b, 0xcc, 0xfb, 0x02, 0x15, 0x5f, 0xa0,
		0xea, 0x99, 0x65, 0x95, 0x1a, 0xe7, 0x3a, 0x9d, 0x7c, 0x15, 0xd2, 0x18, 0x2a, 0x8b, 0xa9, 0x57,
		0x25, 0x33, 0xf4, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x11, 0x25, 0x4e, 0xf7, 0x9d, 0x0d, 0x00, 0x00,
	}
	buf, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		panic(err)
	}
	dec := gob.NewDecoder(buf)
	if err := dec.Decode(&tab); err != nil {
		panic(err)
	}
	for i := 0; i < numStates; i++ {
		for j := 0; j < numNTSymbols; j++ {
			gotoTab[i][j] = tab[i][j]
		}
	}
}
