// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"bytes"
	"compress/gzip"
	"encoding/gob"
)

const numNTSymbols = 8

type (
	gotoTable [numStates]gotoRow
	gotoRow   [numNTSymbols]int
)

var gotoTab = gotoTable{}

func init() {
	tab := [][]int{}
	data := []byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe2, 0xfd, 0xdf, 0xcd, 0xc4, 0xc8,
		0xf4, 0xbf, 0x87, 0x81, 0xf1, 0x7f, 0x17, 0x03, 0x03, 0xcf, 0xff, 0x4e, 0x10, 0xaf, 0x8b, 0x81,
		0x91, 0x85, 0x81, 0xe1, 0x1f, 0xe3, 0x84, 0xff, 0x3d, 0x0c, 0x3a, 0x1c, 0x8c, 0x4c, 0x8c, 0x60,
		0xc0, 0xc1, 0xc8, 0x48, 0x32, 0x83, 0x4f, 0x80, 0xb0, 0x1a, 0x19, 0x39, 0x0c, 0x29, 0x35, 0x18,
		0x43, 0x83, 0xb0, 0x76, 0x03, 0x90, 0x76, 0x33, 0x13, 0xfc, 0xee, 0xb1, 0x80, 0x31, 0xac, 0xf0,
		0x1b, 0xe8, 0x44, 0xaa, 0x07, 0x5d, 0xdc, 0xc8, 0x09, 0x96, 0x00, 0xb8, 0x97, 0x83, 0x60, 0x8c,
		0x10, 0x62, 0xb4, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x36, 0x36, 0x9c, 0xaa, 0xae, 0x01, 0x00,
		0x00,
	}
	buf, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		panic(err)
	}
	dec := gob.NewDecoder(buf)
	if err := dec.Decode(&tab); err != nil {
		panic(err)
	}
	for i := 0; i < numStates; i++ {
		for j := 0; j < numNTSymbols; j++ {
			gotoTab[i][j] = tab[i][j]
		}
	}
}
