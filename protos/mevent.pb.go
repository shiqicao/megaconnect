// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/mevent.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MEvent is an entry in an MBlock.
// It represents something that happened, either through direct observation from connected chains, or through workflow
// evaluation.
type MEvent struct {
	// Types that are valid to be assigned to Body:
	//	*MEvent_ReportBlock
	//	*MEvent_MonitorEvent
	//	*MEvent_ActionEvent
	//	*MEvent_DeployWorkflow
	//	*MEvent_UndeployWorkflow
	Body                 isMEvent_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MEvent) Reset()         { *m = MEvent{} }
func (m *MEvent) String() string { return proto.CompactTextString(m) }
func (*MEvent) ProtoMessage()    {}
func (*MEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_696e7a026cc80ebb, []int{0}
}

func (m *MEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MEvent.Unmarshal(m, b)
}
func (m *MEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MEvent.Marshal(b, m, deterministic)
}
func (m *MEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MEvent.Merge(m, src)
}
func (m *MEvent) XXX_Size() int {
	return xxx_messageInfo_MEvent.Size(m)
}
func (m *MEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MEvent proto.InternalMessageInfo

type isMEvent_Body interface {
	isMEvent_Body()
}

type MEvent_ReportBlock struct {
	ReportBlock *Block `protobuf:"bytes,1,opt,name=report_block,json=reportBlock,proto3,oneof"`
}

type MEvent_MonitorEvent struct {
	MonitorEvent *MonitorEvent `protobuf:"bytes,2,opt,name=monitor_event,json=monitorEvent,proto3,oneof"`
}

type MEvent_ActionEvent struct {
	ActionEvent *ActionEvent `protobuf:"bytes,3,opt,name=action_event,json=actionEvent,proto3,oneof"`
}

type MEvent_DeployWorkflow struct {
	DeployWorkflow *DeployWorkflow `protobuf:"bytes,4,opt,name=deploy_workflow,json=deployWorkflow,proto3,oneof"`
}

type MEvent_UndeployWorkflow struct {
	UndeployWorkflow *UndeployWorkflow `protobuf:"bytes,5,opt,name=undeploy_workflow,json=undeployWorkflow,proto3,oneof"`
}

func (*MEvent_ReportBlock) isMEvent_Body() {}

func (*MEvent_MonitorEvent) isMEvent_Body() {}

func (*MEvent_ActionEvent) isMEvent_Body() {}

func (*MEvent_DeployWorkflow) isMEvent_Body() {}

func (*MEvent_UndeployWorkflow) isMEvent_Body() {}

func (m *MEvent) GetBody() isMEvent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *MEvent) GetReportBlock() *Block {
	if x, ok := m.GetBody().(*MEvent_ReportBlock); ok {
		return x.ReportBlock
	}
	return nil
}

func (m *MEvent) GetMonitorEvent() *MonitorEvent {
	if x, ok := m.GetBody().(*MEvent_MonitorEvent); ok {
		return x.MonitorEvent
	}
	return nil
}

func (m *MEvent) GetActionEvent() *ActionEvent {
	if x, ok := m.GetBody().(*MEvent_ActionEvent); ok {
		return x.ActionEvent
	}
	return nil
}

func (m *MEvent) GetDeployWorkflow() *DeployWorkflow {
	if x, ok := m.GetBody().(*MEvent_DeployWorkflow); ok {
		return x.DeployWorkflow
	}
	return nil
}

func (m *MEvent) GetUndeployWorkflow() *UndeployWorkflow {
	if x, ok := m.GetBody().(*MEvent_UndeployWorkflow); ok {
		return x.UndeployWorkflow
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MEvent_OneofMarshaler, _MEvent_OneofUnmarshaler, _MEvent_OneofSizer, []interface{}{
		(*MEvent_ReportBlock)(nil),
		(*MEvent_MonitorEvent)(nil),
		(*MEvent_ActionEvent)(nil),
		(*MEvent_DeployWorkflow)(nil),
		(*MEvent_UndeployWorkflow)(nil),
	}
}

func _MEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MEvent)
	// body
	switch x := m.Body.(type) {
	case *MEvent_ReportBlock:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReportBlock); err != nil {
			return err
		}
	case *MEvent_MonitorEvent:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MonitorEvent); err != nil {
			return err
		}
	case *MEvent_ActionEvent:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActionEvent); err != nil {
			return err
		}
	case *MEvent_DeployWorkflow:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeployWorkflow); err != nil {
			return err
		}
	case *MEvent_UndeployWorkflow:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UndeployWorkflow); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MEvent.Body has unexpected type %T", x)
	}
	return nil
}

func _MEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MEvent)
	switch tag {
	case 1: // body.report_block
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Block)
		err := b.DecodeMessage(msg)
		m.Body = &MEvent_ReportBlock{msg}
		return true, err
	case 2: // body.monitor_event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MonitorEvent)
		err := b.DecodeMessage(msg)
		m.Body = &MEvent_MonitorEvent{msg}
		return true, err
	case 3: // body.action_event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActionEvent)
		err := b.DecodeMessage(msg)
		m.Body = &MEvent_ActionEvent{msg}
		return true, err
	case 4: // body.deploy_workflow
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeployWorkflow)
		err := b.DecodeMessage(msg)
		m.Body = &MEvent_DeployWorkflow{msg}
		return true, err
	case 5: // body.undeploy_workflow
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UndeployWorkflow)
		err := b.DecodeMessage(msg)
		m.Body = &MEvent_UndeployWorkflow{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MEvent)
	// body
	switch x := m.Body.(type) {
	case *MEvent_ReportBlock:
		s := proto.Size(x.ReportBlock)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MEvent_MonitorEvent:
		s := proto.Size(x.MonitorEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MEvent_ActionEvent:
		s := proto.Size(x.ActionEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MEvent_DeployWorkflow:
		s := proto.Size(x.DeployWorkflow)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MEvent_UndeployWorkflow:
		s := proto.Size(x.UndeployWorkflow)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DeployWorkflow struct {
	WorkflowId           []byte   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployWorkflow) Reset()         { *m = DeployWorkflow{} }
func (m *DeployWorkflow) String() string { return proto.CompactTextString(m) }
func (*DeployWorkflow) ProtoMessage()    {}
func (*DeployWorkflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_696e7a026cc80ebb, []int{1}
}

func (m *DeployWorkflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployWorkflow.Unmarshal(m, b)
}
func (m *DeployWorkflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployWorkflow.Marshal(b, m, deterministic)
}
func (m *DeployWorkflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployWorkflow.Merge(m, src)
}
func (m *DeployWorkflow) XXX_Size() int {
	return xxx_messageInfo_DeployWorkflow.Size(m)
}
func (m *DeployWorkflow) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployWorkflow.DiscardUnknown(m)
}

var xxx_messageInfo_DeployWorkflow proto.InternalMessageInfo

func (m *DeployWorkflow) GetWorkflowId() []byte {
	if m != nil {
		return m.WorkflowId
	}
	return nil
}

func (m *DeployWorkflow) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type UndeployWorkflow struct {
	WorkflowId           []byte   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UndeployWorkflow) Reset()         { *m = UndeployWorkflow{} }
func (m *UndeployWorkflow) String() string { return proto.CompactTextString(m) }
func (*UndeployWorkflow) ProtoMessage()    {}
func (*UndeployWorkflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_696e7a026cc80ebb, []int{2}
}

func (m *UndeployWorkflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UndeployWorkflow.Unmarshal(m, b)
}
func (m *UndeployWorkflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UndeployWorkflow.Marshal(b, m, deterministic)
}
func (m *UndeployWorkflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UndeployWorkflow.Merge(m, src)
}
func (m *UndeployWorkflow) XXX_Size() int {
	return xxx_messageInfo_UndeployWorkflow.Size(m)
}
func (m *UndeployWorkflow) XXX_DiscardUnknown() {
	xxx_messageInfo_UndeployWorkflow.DiscardUnknown(m)
}

var xxx_messageInfo_UndeployWorkflow proto.InternalMessageInfo

func (m *UndeployWorkflow) GetWorkflowId() []byte {
	if m != nil {
		return m.WorkflowId
	}
	return nil
}

func init() {
	proto.RegisterType((*MEvent)(nil), "protos.MEvent")
	proto.RegisterType((*DeployWorkflow)(nil), "protos.DeployWorkflow")
	proto.RegisterType((*UndeployWorkflow)(nil), "protos.UndeployWorkflow")
}

func init() { proto.RegisterFile("protos/mevent.proto", fileDescriptor_696e7a026cc80ebb) }

var fileDescriptor_696e7a026cc80ebb = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x51, 0x4b, 0x3a, 0x41,
	0x14, 0xc5, 0xd5, 0xbf, 0x7f, 0x83, 0xbb, 0xab, 0xd9, 0x18, 0xb1, 0xf4, 0x52, 0xf8, 0x14, 0x11,
	0x0a, 0xfa, 0x12, 0xf4, 0xa4, 0x14, 0x19, 0xe1, 0xcb, 0x42, 0x04, 0xbd, 0x2c, 0xb3, 0x33, 0x93,
	0x2d, 0xee, 0xce, 0x5d, 0xd6, 0x31, 0xf1, 0x13, 0xf6, 0xb5, 0xc2, 0x3b, 0x3b, 0xa5, 0xfb, 0xd2,
	0xe3, 0x39, 0xe7, 0xfe, 0xce, 0x65, 0x2e, 0x03, 0xbd, 0xbc, 0x40, 0x83, 0xab, 0x61, 0xa6, 0x3e,
	0x95, 0x36, 0x03, 0x52, 0xac, 0x65, 0xcd, 0x73, 0x56, 0x86, 0x71, 0x8a, 0x62, 0x69, 0xb3, 0x1f,
	0x6f, 0x6f, 0xbe, 0xff, 0xd5, 0x80, 0xd6, 0xfc, 0x61, 0x67, 0xb0, 0x11, 0xf8, 0x85, 0xca, 0xb1,
	0x30, 0x11, 0x41, 0x41, 0xfd, 0xb2, 0x7e, 0xe5, 0x8d, 0xda, 0x76, 0x70, 0x35, 0x98, 0xee, 0xcc,
	0x59, 0x2d, 0xf4, 0xec, 0x10, 0x49, 0x76, 0x07, 0xed, 0x0c, 0x75, 0x62, 0xb0, 0x88, 0xa8, 0x35,
	0x68, 0x10, 0x74, 0xea, 0xa0, 0xb9, 0x0d, 0x69, 0xc1, 0xac, 0x16, 0xfa, 0xd9, 0x9e, 0x66, 0xb7,
	0xe0, 0x73, 0x61, 0x12, 0xd4, 0x25, 0xfb, 0x8f, 0xd8, 0x9e, 0x63, 0x27, 0x94, 0x39, 0xd4, 0xe3,
	0xbf, 0x92, 0x4d, 0xe0, 0x58, 0xaa, 0x3c, 0xc5, 0x6d, 0xb4, 0xc1, 0x62, 0xf9, 0x9e, 0xe2, 0x26,
	0x68, 0x12, 0x7c, 0xe6, 0xe0, 0x7b, 0x8a, 0x5f, 0xcb, 0x74, 0x56, 0x0b, 0x3b, 0xf2, 0xc0, 0x61,
	0x8f, 0x70, 0xb2, 0xd6, 0xd5, 0x92, 0xff, 0x54, 0x12, 0xb8, 0x92, 0x17, 0x2d, 0xab, 0x35, 0xdd,
	0x75, 0xc5, 0x9b, 0xb6, 0xa0, 0x19, 0xa3, 0xdc, 0xf6, 0x9f, 0xa1, 0x73, 0xb8, 0x94, 0x5d, 0x80,
	0xe7, 0x9a, 0xa3, 0x44, 0xd2, 0x3d, 0xfd, 0x10, 0x9c, 0xf5, 0x24, 0x59, 0x00, 0x47, 0x39, 0xdf,
	0xa6, 0xc8, 0x25, 0xdd, 0xcd, 0x0f, 0x9d, 0xec, 0x8f, 0xa1, 0x5b, 0x5d, 0xfe, 0x67, 0xdd, 0xf4,
	0xe6, 0xed, 0x7a, 0x91, 0x98, 0x8f, 0x75, 0x3c, 0x10, 0x98, 0x0d, 0x33, 0xb5, 0xe0, 0xab, 0x9c,
	0x0b, 0x95, 0xf2, 0x98, 0x84, 0x40, 0xad, 0x95, 0x30, 0x43, 0xfb, 0xb8, 0xd8, 0xfe, 0x94, 0xf1,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0xed, 0x2e, 0xfc, 0x47, 0x02, 0x00, 0x00,
}
